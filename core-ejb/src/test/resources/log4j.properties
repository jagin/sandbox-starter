log4j.rootLogger=info, stdout, R

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Print the date in ISO 8601 format
log4j.appender.stdout.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=target/sandbox-ejb-test.log

log4j.appender.R.MaxFileSize=100KB
# Keep one backup file
log4j.appender.R.MaxBackupIndex=1

log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

log4j.logger.pl.jagin.udm.persistence=DEBUG


##########################
# Hibernate log settings #
##########################

log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL
#log4j.logger.org.hibernate.SQL=debug

### log JDBC bind parameters ###
#log4j.logger.net.sf.hibernate.type=trace

### Log the actual Hibernate Query Language (HQL) expression
#log4j.logger.org.hibernate.impl.SessionImpl=trace

### Log the substitution parameters in the HQL expression
#log4j.logger.org.hibernate.engine.QueryParameters=DEBUG

### log prepared statement cache activity ###
#log4j.logger.org.hibernate.ps.PreparedStatementCache=debug

### log schema export/update ###
#log4j.logger.org.hibernate.tool.hbm2ddl=debug

### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug

### log cache activity ###
#log4j.logger.org.hibernate.cache=info

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace


### Hibernate and parameter logging with log4j
## Sometimes you have to debug some info from Hibernate. Mainly in cases where
## your Hibernate Session cannot update/delete or insert some record into the database.
## In those cases it is hard to figure out which statement (HQL or SQL) is failing,
## let alone which parameters are used. In this post I will give some sample log4j
## catalogs (package names) you will have to configure to get the info you  need.
## To enable SQL logging you need set hibernate.show_sql=true

# log HQL statements
#log4j.logger.org.hibernate.engine.query.HQLQueryPlan=TRACE
# log HQL replacement parameters
#log4j.logger.org.hibernate.engine.QueryParameters=TRACE

# log SQL statements (in sync with Session flushing)
#log4j.logger.org.hibernate.SQL=DEBUG
# log SQL replacement parameters
#log4j.logger.org.hibernate.type=TRACE

